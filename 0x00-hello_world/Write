ign In
0x00. C — Hello, World
Reinaldo Castro

Reinaldo Castro
·

Follow
3 min read
·
Oct 1, 2021

Build steps in c

Preprocessor: The C Preprocessor is not a part of the compiler, but is a separate step in the compilation process. In simple terms, a C Preprocessor is just a text substitution tool and it instructs the compiler to do required pre-processing before the actual compilation. We’ll refer to the C Preprocessor as CPP.

Write a script that runs a C file through the preprocessor and save the result into another file.

    The C file name will be saved in the variable $CFILE
    The output should be saved in the file c

#!/bin/bash
gcc -E $CFILE > c
Compiler

The code which is expanded by the preprocessor is passed to the compiler. The compiler converts this code into assembly code. Or we can say that the C compiler converts the pre-processed code into assembly code.

Write a script that compiles a C file but does not link.

    The C file name will be saved in the variable $CFILE
    The output file should be named the same as the C file, but with the extension .o instead of .c.
    Example: if the C file is main.c, the output file should be main.o

#!/bin/bash

gcc -c $CFILE > ${CFILE::-2}”.o”
Assembler

The assembly code is converted into object code by using an assembler. The name of the object file generated by the assembler is the same as the source file. The extension of the object file in DOS is ‘.obj,’ and in UNIX, the extension is ‘o’. If the name of the source file is ‘hello.c’, then the name of the object file would be ‘hello.obj’.

Write a script that generates the assembly code of a C code and save it in an output file.

    The C file name will be saved in the variable $CFILE
    The output file should be named the same as the C file, but with the extension .s instead of .c.
    Example: if the C file is main.c, the output file should be main.s

#!/bin/bash
gcc -S $CFILE > ${CFILE::-2}”.s”
Linker

Mainly, all the programs written in C use library functions. These library functions are pre-compiled, and the object code of these library files is stored with ‘.lib’ (or ‘.a’) extension. The main working of the linker is to combine the object code of library files with the object code of our program. Sometimes the situation arises when our program refers to the functions defined in other files; then linker plays a very important role in this. It links the object code of these files to our program. Therefore, we conclude that the job of the linker is to link the object code of our program with the object code of the library files and other files. The output of the linker is the executable file. The name of the executable file is the same as the source file but differs only in their extensions. In DOS, the extension of the executable file is ‘.exe’, and in UNIX, the executable file can be named as ‘a.out’. For example, if we are using printf() function in a program, then the linker adds its associated code in an output file.

Write a script that compiles a C file and creates an executable named cisfun.

    The C file name will be saved in the variable $CFILE

#!/bin/bash
gcc -o cisfun $CFILE

Reinaldo Castro
Written by Reinaldo Castro
38 Followers
More from Reinaldo Castro
IoT
Reinaldo Castro

Reinaldo Castro
IoT
It is a concept of interconnection of physical devices, connected, intelligent or any that is equipped with electronics and software such…
4 min read·Apr 25, 2022
“C” Libraries
Reinaldo Castro

Reinaldo Castro
“C” Libraries
Why use libraries
5 min read·Oct 25, 2021

Hard and symbolic links on Linux
Reinaldo Castro

Reinaldo Castro
Hard and symbolic links on Linux
What is a HardLink in Linux?
2 min read·Sep 29, 2021
What happens when you type ls *.c in the shell?
Reinaldo Castro

Reinaldo Castro
What happens when you type ls *.c in the shell?
We can find multiple commands on the shell to execute, one of them is the command ls, using this command you can make a list of the files…
2 min read·Dec 8, 2021
See all from Reinaldo Castro
Recommended from Medium
The ChatGPT Hype Is Over — Now Watch How Google Will Kill ChatGPT.
AL Anany

AL Anany
The ChatGPT Hype Is Over — Now Watch How Google Will Kill ChatGPT.
It never happens instantly. The business game is longer than you know.
·6 min read·Sep 1

357
10 Seconds That Ended My 20 Year Marriage
Unbecoming

Unbecoming
10 Seconds That Ended My 20 Year Marriage
It’s August in Northern Virginia, hot and humid. I still haven’t showered from my morning trail run. I’m wearing my stay-at-home mom…
·4 min read·Feb 16, 2022

955
Lists
a person floating in a gradient orb with lines projecting out of it
Staff Picks
465 stories·319 saves
Stories to Help You Level-Up at Work
19 stories·235 saves
Self-Improvement 101
20 stories·648 saves
Productivity 101
20 stories·600 saves
Advice From a Software Engineer With 8 Years of Experience
Benoit Ruiz

Benoit Ruiz

in

Better Programming
Advice From a Software Engineer With 8 Years of Experience
Practical tips for those who want to advance in their careers
22 min read·Mar 20

201
Don’t Just LeetCode; Follow the Coding Patterns Instead
Arslan Ahmad

Arslan Ahmad

in

Level Up Coding
Don’t Just LeetCode; Follow the Coding Patterns Instead
What if you don’t like to practice 100s of coding questions before the interview?
5 min read·Sep 15, 2022

25
Why Japanese Websites Look So Different
Mirijam Missbichler

Mirijam Missbichler
Why Japanese Websites Look So Different
& how to analyze design choices without jumping to conclusions
8 min read·May 2

201
iOS 17 Safari
Nikhil Vemu

Nikhil Vemu

in

Mac O’Clock
Change These 12 iOS 17 Settings Right Now For a Superior Experience
iOS 17’s got hell-a-lot features you can’t discover thyself
·9 min read·Sep 26

33
See more recommendations

Help

Status

Writers
ign In
0x00. C — Hello, World
Reinaldo Castro

Reinaldo Castro
·

Follow
3 min read
·
Oct 1, 2021

Build steps in c

Preprocessor: The C Preprocessor is not a part of the compiler, but is a separate step in the compilation process. In simple terms, a C Preprocessor is just a text substitution tool and it instructs the compiler to do required pre-processing before the actual compilation. We’ll refer to the C Preprocessor as CPP.

Write a script that runs a C file through the preprocessor and save the result into another file.

    The C file name will be saved in the variable $CFILE
    The output should be saved in the file c

#!/bin/bash
gcc -E $CFILE > c
Compiler

The code which is expanded by the preprocessor is passed to the compiler. The compiler converts this code into assembly code. Or we can say that the C compiler converts the pre-processed code into assembly code.

Write a script that compiles a C file but does not link.

    The C file name will be saved in the variable $CFILE
    The output file should be named the same as the C file, but with the extension .o instead of .c.
    Example: if the C file is main.c, the output file should be main.o

#!/bin/bash

gcc -c $CFILE > ${CFILE::-2}”.o”
Assembler

The assembly code is converted into object code by using an assembler. The name of the object file generated by the assembler is the same as the source file. The extension of the object file in DOS is ‘.obj,’ and in UNIX, the extension is ‘o’. If the name of the source file is ‘hello.c’, then the name of the object file would be ‘hello.obj’.

Write a script that generates the assembly code of a C code and save it in an output file.

    The C file name will be saved in the variable $CFILE
    The output file should be named the same as the C file, but with the extension .s instead of .c.
    Example: if the C file is main.c, the output file should be main.s

#!/bin/bash
gcc -S $CFILE > ${CFILE::-2}”.s”
Linker

Mainly, all the programs written in C use library functions. These library functions are pre-compiled, and the object code of these library files is stored with ‘.lib’ (or ‘.a’) extension. The main working of the linker is to combine the object code of library files with the object code of our program. Sometimes the situation arises when our program refers to the functions defined in other files; then linker plays a very important role in this. It links the object code of these files to our program. Therefore, we conclude that the job of the linker is to link the object code of our program with the object code of the library files and other files. The output of the linker is the executable file. The name of the executable file is the same as the source file but differs only in their extensions. In DOS, the extension of the executable file is ‘.exe’, and in UNIX, the executable file can be named as ‘a.out’. For example, if we are using printf() function in a program, then the linker adds its associated code in an output file.

Write a script that compiles a C file and creates an executable named cisfun.

    The C file name will be saved in the variable $CFILE

#!/bin/bash
gcc -o cisfun $CFILE

Reinaldo Castro
Written by Reinaldo Castro
38 Followers
More from Reinaldo Castro
IoT
Reinaldo Castro

Reinaldo Castro
IoT
It is a concept of interconnection of physical devices, connected, intelligent or any that is equipped with electronics and software such…
4 min read·Apr 25, 2022
“C” Libraries
Reinaldo Castro

Reinaldo Castro
“C” Libraries
Why use libraries
5 min read·Oct 25, 2021

Hard and symbolic links on Linux
Reinaldo Castro

Reinaldo Castro
Hard and symbolic links on Linux
What is a HardLink in Linux?
2 min read·Sep 29, 2021
What happens when you type ls *.c in the shell?
Reinaldo Castro

Reinaldo Castro
What happens when you type ls *.c in the shell?
We can find multiple commands on the shell to execute, one of them is the command ls, using this command you can make a list of the files…
2 min read·Dec 8, 2021
See all from Reinaldo Castro
Recommended from Medium
The ChatGPT Hype Is Over — Now Watch How Google Will Kill ChatGPT.
AL Anany

AL Anany
The ChatGPT Hype Is Over — Now Watch How Google Will Kill ChatGPT.
It never happens instantly. The business game is longer than you know.
·6 min read·Sep 1

357
10 Seconds That Ended My 20 Year Marriage
Unbecoming

Unbecoming
10 Seconds That Ended My 20 Year Marriage
It’s August in Northern Virginia, hot and humid. I still haven’t showered from my morning trail run. I’m wearing my stay-at-home mom…
·4 min read·Feb 16, 2022

955
Lists
a person floating in a gradient orb with lines projecting out of it
Staff Picks
465 stories·319 saves
Stories to Help You Level-Up at Work
19 stories·235 saves
Self-Improvement 101
20 stories·648 saves
Productivity 101
20 stories·600 saves
Advice From a Software Engineer With 8 Years of Experience
Benoit Ruiz

Benoit Ruiz

in

Better Programming
Advice From a Software Engineer With 8 Years of Experience
Practical tips for those who want to advance in their careers
22 min read·Mar 20

201
Don’t Just LeetCode; Follow the Coding Patterns Instead
Arslan Ahmad

Arslan Ahmad

in

Level Up Coding
Don’t Just LeetCode; Follow the Coding Patterns Instead
What if you don’t like to practice 100s of coding questions before the interview?
5 min read·Sep 15, 2022

25
Why Japanese Websites Look So Different
Mirijam Missbichler

Mirijam Missbichler
Why Japanese Websites Look So Different
& how to analyze design choices without jumping to conclusions
8 min read·May 2

201
iOS 17 Safari
Nikhil Vemu

Nikhil Vemu

in

Mac O’Clock
Change These 12 iOS 17 Settings Right Now For a Superior Experience
iOS 17’s got hell-a-lot features you can’t discover thyself
·9 min read·Sep 26

33
See more recommendations

Help

Status

Writers

Blog

Careers

Privacy

Terms

About

Text to speech

Teams

Blog

Careers

Privacy

Terms

About

Text to speech

Teams

